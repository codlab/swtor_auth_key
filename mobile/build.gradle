buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath 'org.ajoberstar:gradle-jacoco:0.3.0'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2"
        classpath 'com.uphyca.gradle:gradle-android-aspectj-plugin:0.9.14'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.uphyca.android-aspectj'
apply plugin: 'io.fabric'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "eu.codlab.swtor"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    compile files("libs/swtor.jar")
    wearApp project(':wear')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.0-beta'

    apt 'com.github.Raizlabs.DBFlow:dbflow-processor:3.0.0-beta1'



    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.6@aar') {
        transitive = true;
    }

    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.google.android.gms:play-services-wearable:8.4.0'

    compile 'com.android.support:design:23.1.1'
    compile 'me.zhanghai.android.materialprogressbar:library:1.1.4'
    compile 'com.github.codlab:MaterialTutorial:1.4.3'

    compile 'com.github.Raizlabs.DBFlow:dbflow-core:3.0.0-beta1'
    compile 'com.github.Raizlabs.DBFlow:dbflow:3.0.0-beta1'

    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'

    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    compile 'com.jakewharton:butterknife:7.0.1'

    compile 'com.github.aardouin:AspectForAndroid:1.0'



}

tasks.withType(Test) { task ->
    jacoco {
        destinationFile = file("$buildDir/jacoco/${task.name}.exec")
    }
}

afterEvaluate {
    test.dependsOn clean

    tasks.testDebugUnitTest.finalizedBy(tasks.sonarqube)
}


sonarqube {
    properties {
        property "sonar.projectKey", "swtor"
        property "sonar.projectName", "Swtor"
        property "sonar.projectVersion", "1.0"


        property "sonar.sources", "./src/main/java"
        property "sonar.tests", "./src/test/java"
        property "sonar.binaries", "build"
        property "sonar.scm.provider", "git"

        property "sonar.junit.reportsPath", "./build/test-results/debug"

        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/testDebugUnitTest.exec"
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"

    }
}